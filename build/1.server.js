require("source-map-support").install(),exports.ids=[1],exports.modules={61:function(e,t,n){"use strict";function u(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){var e="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103;return function(t,n,u,o){var r=t&&t.defaultProps,l=arguments.length-3;if(n||0===l||(n={}),n&&r)for(var f in r)void 0===n[f]&&(n[f]=r[f]);else n||(n=r||{});if(1===l)n.children=o;else if(l>1){for(var i=Array(l),c=0;c<l;c++)i[c]=arguments[c+3];n.children=i}return{$$typeof:e,type:t,key:void 0===u?null:""+u,ref:null,props:n,_owner:null}}}(),r=n(7),l=(u(r),n(27)),f=u(l),i=o("div",{},void 0,o(f.default,{title:"Not Found"}),o("h1",{},void 0,"Page Not Found!")),c=function(){return i};t.default=c},102:function(e,t,n){"use strict";function u(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=n(61),r=u(o);t.default={path:"*",component:r.default}},104:function(e,t,n){"use strict";function u(e){return{path:"post/:slug",getComponents:function(t,u){n.e(3,function(t){var r=n(63).default,l=n(32).default;(0,o.injectAsyncReducer)(e,"currentPost",l),u(null,r)})}}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=u;var o=n(34)},107:function(e,t,n){"use strict";function u(e){return{path:"posts",getComponents:function(t,u){n.e(2,function(t){var r=n(64).default,l=n(33).default;(0,o.injectAsyncReducer)(e,"posts",l),u(null,r)})}}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=u;var o=n(34)}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,